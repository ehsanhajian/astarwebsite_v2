name: Get latest articles

on:
  schedule:
    - cron: '*/15 * * * *'
  push:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  logPostsBySpaceId:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install cURL
        run: sudo apt-get install curl -y

      - name: Retrieve previous state
        id: get_previous_state
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:ehsanhajian/:astarwebsite_v2/contents/state.json
          headers: |
            {
              "authorization": "Bearer ${{ secrets.GITHUB_TOKEN }}"
            }

      - name: Execute GraphQL query
        id: execute_query
        run: |
          query='{"query":"query PostsBySpaceId { posts(where: {space: {id_eq: \"11405\"}, AND: {hidden_not_eq: true}}, orderBy: id_DESC) {slug}}"}'
          response=$(curl -X POST -H "Content-Type: application/json" -d "$query" https://squid.subsquid.io/subsocial/graphql)
          echo "::set-output name=response::$response"

      - name: Store current state
        id: store_current_state
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/:ehsanhajian/:astarwebsite_v2/contents/state.json
          headers: |
            {
              "authorization": "Bearer ${{ secrets.GITHUB_TOKEN }}",
              "Content-Type": "application/json"
            }
          data: |
            {
              "message": "Updating state",
              "content": "$(echo ${{ steps.execute_query.outputs.response }} | base64 --wrap=0)",
              "sha": "${{ steps.get_previous_state.outputs.data.sha }}"
            }

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: logPostsBySpaceId

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Generate build
        run: npm run generate

      - name: List generated files
        run: ls .output/public/index.html

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy app build to S3 bucket
        run: aws s3 sync .output/public/ s3://astar.network --delete
